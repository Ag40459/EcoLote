/* Hero.module.css - Updated with Animated Blobs and Dots integrated with Theme Variables */

.heroSection {
  position: relative;
  height: 100vh; /* Garante altura total da viewport */
  min-height: 600px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: var(--text-color, white); /* Use theme variable */
  background-color: var(--background-color, #121212); /* Use theme variable */
  overflow: hidden;
  width: 100%;
}

/* Container for the animated blobs */
.blobContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0; /* Behind dots and content */
  filter: blur(80px); /* Soften the blobs */
  opacity: var(--blob-opacity, 0.6); /* Control blob visibility via theme */
}

.blob {
  position: absolute;
  border-radius: 50%; /* Start as circles */
  mix-blend-mode: screen; /* Blend blobs for interesting color mixing, adjust as needed */
  will-change: transform, border-radius; /* Optimize animation */
}

/* Define individual blob styles and animations */
.blob1 {
  width: 400px;
  height: 400px;
  background: var(--blob-color-1, radial-gradient(circle, #ff7e5f, #feb47b)); /* Theme variable */
  top: 10%;
  left: 10%;
  animation: moveBlob1 25s infinite alternate ease-in-out;
}

.blob2 {
  width: 300px;
  height: 300px;
  background: var(--blob-color-2, radial-gradient(circle, #6a11cb, #2575fc)); /* Theme variable */
  top: 60%;
  left: 70%;
  animation: moveBlob2 30s infinite alternate ease-in-out;
  animation-delay: -5s; /* Offset animation start */
}

.blob3 {
  width: 350px;
  height: 350px;
  background: var(--blob-color-3, radial-gradient(circle, #30cfd0, #330867)); /* Theme variable */
  top: 40%;
  left: 40%;
  animation: moveBlob3 20s infinite alternate ease-in-out;
  animation-delay: -10s; /* Offset animation start */
}

/* Keyframes for blob movement and morphing */
@keyframes moveBlob1 {
  0% {
    transform: translate(0, 0) scale(1);
    border-radius: 50% 60% 70% 40% / 60% 50% 40% 70%;
  }
  50% {
    transform: translate(100px, 150px) scale(1.2);
    border-radius: 40% 70% 50% 60% / 70% 40% 60% 50%;
  }
  100% {
    transform: translate(-50px, 50px) scale(0.9);
    border-radius: 60% 50% 70% 40% / 50% 60% 40% 70%;
  }
}

@keyframes moveBlob2 {
  0% {
    transform: translate(0, 0) scale(1);
    border-radius: 65% 35% 45% 55% / 55% 65% 35% 45%;
  }
  50% {
    transform: translate(-150px, -100px) scale(1.1);
    border-radius: 55% 45% 65% 35% / 45% 55% 35% 65%;
  }
  100% {
    transform: translate(50px, -50px) scale(1);
    border-radius: 35% 65% 55% 45% / 65% 35% 45% 55%;
  }
}

@keyframes moveBlob3 {
  0% {
    transform: translate(0, 0) scale(1);
    border-radius: 40% 60% 50% 50% / 60% 40% 50% 50%;
  }
  50% {
    transform: translate(80px, -120px) scale(0.9);
    border-radius: 50% 50% 40% 60% / 50% 50% 60% 40%;
  }
  100% {
    transform: translate(-80px, 100px) scale(1.1);
    border-radius: 60% 40% 50% 50% / 40% 60% 50% 50%;
  }
}

/* Overlay for the subtle dot pattern */
.dotsOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: transparent;
  background-image: radial-gradient(
    var(--dot-color, rgba(255, 255, 255, 0.1)) var(--dot-size, 1px), /* Use theme variables */
    transparent var(--dot-size, 1px)
  );
  background-size: var(--dot-spacing, 15px) var(--dot-spacing, 15px); /* Use theme variables */
  z-index: 1; /* Above blobs, below content */
  pointer-events: none; /* Allow clicks through */
}

/* Content styling - Ensure it uses theme variables */
.heroContent {
  position: relative;
  z-index: 2; /* Above blobs and dots */
  max-width: 900px;
  width: 100%;
  padding: 0 20px;
}

/* --- Existing Styles (Ensure Theme Variables are Used) --- */

/* Animações para textos (mantidas) */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.slideContent {
  /* Estilos para o conteúdo do slide */
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.heroTitle {
  font-size: clamp(2rem, 5vw, 3rem);
  font-weight: 700;
  margin-bottom: 1.5rem;
  color: var(--accent-color-gold, #E6B800); /* Use theme variable */
  position: relative;
  display: inline-block;
  /* animation: fadeInUp 0.8s ease forwards; */ /* Consider removing if causing issues with carousel */
}

/* Title Glow Effect (Optional - adjust color based on theme if needed) */
.heroTitle::before {
  content: \'\';
  position: absolute;
  top: 0;
  left: -5px;
  right: -5px;
  bottom: 0;
  background: linear-gradient(90deg,
    rgba(230, 184, 0, 0) 0%,
    rgba(230, 184, 0, 0.2) 50%,
    rgba(230, 184, 0, 0) 100%); /* Consider using theme accent color variable */
  z-index: -1;
  transform: scaleX(0);
  transform-origin: left;
  animation: titleGlow 3s ease-in-out infinite;
}

@keyframes titleGlow {
  0% { transform: scaleX(0); }
  50% { transform: scaleX(1); }
  100% { transform: scaleX(0); }
}

.heroSubtitle {
  font-size: clamp(1rem, 3vw, 1.125rem);
  line-height: 1.6;
  margin-bottom: 2rem;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  color: var(--text-secondary-color, var(--text-color, white)); /* Use theme variable */
  white-space: pre-wrap;
  min-height: 4.8em; /* Altura para 3 linhas aproximadamente */
  /* animation: fadeInUp 0.8s ease forwards 0.2s; */ /* Consider removing if causing issues with carousel */
}

/* Carousel Controls - Use theme variables */
.carouselControls {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1.5rem;
  padding-bottom: 2rem;
  gap: 20px;
}

.carouselArrow {
  background: none;
  border: none;
  color: var(--text-color, white);
  font-size: 2rem;
  cursor: pointer;
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  transition: opacity 0.3s ease;
  opacity: 0.7;
}

.carouselArrow:hover {
  opacity: 1;
}

.carouselDotsWrapper {
  height: 44px;
  display: flex;
  align-items: center;
}

.carouselDots {
  display: flex;
  gap: 10px;
}

.carouselDot {
  width: 14px;
  height: 14px;
  border-radius: 50%;
  background-color: var(--dot-inactive-color, rgba(255, 255, 255, 0.5)); /* Theme variable */
  border: none;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.3s ease;
}

.carouselDot.active {
  background-color: var(--accent-color-gold, #E6B800); /* Theme variable */
  transform: scale(1.2);
}

/* Quick Simulator - Use theme variables */
.quickSimulator {
  margin-top: 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.simulatorToggle {
  background: none;
  border: none;
  color: var(--accent-color-gold, #E6B800);
  font-size: 1rem;
  cursor: pointer;
  text-decoration: underline;
  padding: 5px 10px;
  transition: color 0.3s ease;
  margin-top: 0.5rem;
}

.simulatorToggle:hover {
  color: var(--text-color, white);
}

.simulatorForm {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  gap: 10px;
  background: var(--simulator-bg-color, rgba(0, 0, 0, 0.3)); /* Theme variable */
  padding: 15px;
  border-radius: 10px;
  backdrop-filter: blur(5px);
  animation: fadeInUp 0.5s ease forwards;
}

.inputGroup {
  display: flex;
  align-items: center;
  background: var(--input-group-bg, rgba(255, 255, 255, 0.1)); /* Theme variable */
  border-radius: 5px;
  padding: 0 10px;
}

.currencySymbol {
  color: var(--accent-color-gold, #E6B800);
  font-weight: bold;
  padding-right: 5px;
}

.simulatorInput {
  background: transparent;
  border: none;
  color: var(--text-color, white);
  padding: 10px;
  width: 100%;
  outline: none;
}

.simulatorInput::placeholder {
  color: var(--placeholder-color, rgba(255, 255, 255, 0.7)); /* Theme variable */
}

.simulatorButton {
  background: var(--accent-color-gold, #E6B800);
  color: var(--button-text-color, black); /* Theme variable */
  border: none;
  padding: 10px;
  border-radius: 5px;
  cursor: pointer;
  font-weight: bold;
  transition: background-color 0.3s ease;
}

.simulatorButton:hover {
  background: var(--accent-color-gold-hover, var(--primary-color-light, #ffcc00)); /* Theme variable */
}

/* Responsividade (mantida) */
@media (max-width: 768px) {
  .heroSection {
    min-height: 90vh;
    height: auto;
  }

  .heroTitle {
    margin-bottom: 1rem;
  }

  .heroSubtitle {
    margin-bottom: 1.5rem;
  }

  .carouselControls {
    margin-bottom: 1rem;
  }

  .blobContainer {
     filter: blur(60px); /* Less blur on smaller screens */
     opacity: var(--blob-opacity-mobile, 0.5);
  }

  .blob1 { width: 300px; height: 300px; }
  .blob2 { width: 200px; height: 200px; }
  .blob3 { width: 250px; height: 250px; }
}

@media (max-width: 480px) {
  .heroSection {
    min-height: 85vh;
  }

  .heroContent {
    padding-top: 60px;
    padding-left: 15px;
    padding-right: 15px;
  }

  .simulatorForm {
    width: 100%;
  }

  .blobContainer {
     filter: blur(40px);
  }

  .blob1 { width: 250px; height: 250px; }
  .blob2 { width: 150px; height: 150px; }
  .blob3 { width: 200px; height: 200px; }
}